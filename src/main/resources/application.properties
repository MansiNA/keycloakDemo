server.port=${PORT:8081}
logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# Launch the default browser when starting the application in development mode
vaadin.launch-browser=true

spring.datasource.url=jdbc:oracle:thin:@37.120.189.200:1521:xe
spring.datasource.username=EKP_MONITOR
spring.datasource.password=ekp123
spring.datasource.driver.class-name=oracle.jdbc.OracleDriver
# Specify the Hibernate dialect for Oracle
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.OracleDialect

# First, we need to tell the application where to find our Keycloak instance (in a real application, Keycloak would also be using HTTPS)
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/dbussmain
# Second, we need to tell the application what info to pass to the Keycloak instance
spring.security.oauth2.client.registration.keycloak.client-id=dbuss-frvadmin
spring.security.oauth2.client.registration.keycloak.client-secret=pALkVVj5a3bCdyARbrpclKveFT8FWft5
spring.security.oauth2.client.registration.keycloak.scope=profile,email,openid
# This registration will be used by KeycloakLookupService (a class that we have written; not part of Spring Security)
spring.security.oauth2.client.registration.keycloak-rest.provider=keycloak
spring.security.oauth2.client.registration.keycloak-rest.client-id=dbuss-frvadmin
spring.security.oauth2.client.registration.keycloak-rest.client-secret=pALkVVj5a3bCdyARbrpclKveFT8FWft5
spring.security.oauth2.client.registration.keycloak-rest.authorization-grant-type=password
# Also needed by KeycloakUserLookupService
keycloak.rest-api-uri=http://localhost:8080/realms/dbussmain

ldap.url=ldap://91.107.232.133:10389
ldap.user.prefix = uid=
ldap.user.postfix = ,ou=users,dc=wimpi,dc=net
